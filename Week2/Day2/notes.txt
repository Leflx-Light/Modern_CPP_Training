cppcon :
special member functions watch video.





------------------------------
Vehicle class (abstract class)
  reg no.      brand      price      car type
["mh67134rs", "Maruti", 90000.0f, | SEDAN]
----------Vehicle-----------------
---------------------Car-----------------



  reg no.      brand      price      braking system
["mh67134rs", "Honda", 140000.0f, |     ABS]
----------Vehicle-----------------
---------------------Bike-------------------------

Vehicle class (abstract class)
  reg no.      brand      price      car type
["mh67144rs", "Maruti", 90000.0f, | SEDAN]
----------Vehicle-----------------
---------------------Car-----------------

show details of Cars only


for(ptr : data){
    Car *ptr =   dynamic_cast<Car*>(ptr);
    if(ptr){
        std::cout<<*ptr;
    }
    else{
        continue;
    }
}





1. app starts ------APP ID it has to be carried into the second function
2. network setup-------we get ip address and ort number, has to be carried in third function.
3. using network config, setup data transfer to a database, connection will be established.--------we get a databse connection cursor object, take this to function 4
4. using the database access pointer, write data into database.-------use cursor to excecute to excecute write query.



Making of adaptor of above:

void Adaptor(LOGIC)



-----------------capture clause----------------
void Magic(){
    int n1=10, n2=20;
    example 1 : all data values from "enclosing function" are accessible inside f1.
    auto f1 =[&](){return n1 + n2;}

    example 2: selected data values capture by copy
    auto f1 = [n1](){return n1 + n2;}

    example 3: selected data values capture by reference.
    auto f1 = [&n1, &n2](){return n1 + n2;}

    example 4: all data values capture by copy.
    auto f1 =[=](){ return n1 + n2+n3}

    example 5: some values by copy , some by reference
    auto f1 = [n1, &n2, &n3]{return n1+n2+n3;}
    n1 is accessible as copy, n2 and n3 are accessible as reference.
}
